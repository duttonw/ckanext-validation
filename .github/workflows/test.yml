---
name: Tests
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  # Quick check so we don't waste minutes if there's a Flake8 error
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
        timeout-minutes: 2
      - uses: actions/setup-python@v4
        timeout-minutes: 5
        with:
          python-version: '3.x'
      - name: Install requirements
        timeout-minutes: 5
        run: pip install flake8 pycodestyle
      - name: Check syntax
        timeout-minutes: 5
        run: flake8

  test:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include: #ckan-image see https://github.com/ckan/ckan-docker-base, ckan-version controls other image tags
          - ckan-version: "2.11"
            solr-version: "9"
            experimental: false
          - ckan-version: "2.10"
            solr-version: "9"
            experimental: false
          - ckan-version: "2.9"
            solr-version: "8"
            experimental: false

    name: ${{ matrix.experimental && '**Fail_Ignored** ' || '' }} CKAN ${{ matrix.ckan-version }} - Continuous Integration build
    runs-on: ubuntu-latest
    container: drevops/ci-runner:23.12.0
    env:
      CKAN_VERSION: ${{ matrix.ckan-version }}
      SOLR_VERSION: ${{ matrix.solr-version }}

    steps:
      # Patch https://github.com/actions/runner/issues/863
      - name: Preserve $HOME set in the container
        run: echo HOME=/root >> "$GITHUB_ENV"

      - uses: actions/checkout@v3
        timeout-minutes: 2

      - name: Build
        run: bin/build.sh
        timeout-minutes: 15
        continue-on-error: ${{ matrix.experimental }}

      - name: Test
        run: bin/test.sh
        timeout-minutes: 20
        continue-on-error: ${{ matrix.experimental }}

      - name: Retrieve logs
        if: always()
        run: ahoy logs
        timeout-minutes: 1
        continue-on-error: ${{ matrix.experimental }}

      - name: Retrieve screenshots
        if: always()
        run: bin/process-artifacts.sh
        timeout-minutes: 1
        continue-on-error: ${{ matrix.experimental }}

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: CKAN ${{ matrix.ckan-version }} screenshots
          path: /tmp/artifacts/behave/screenshots
        timeout-minutes: 1
        continue-on-error: ${{ matrix.experimental }}
